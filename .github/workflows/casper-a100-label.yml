name: casper-a100-label
run-name: ${{ github.actor }} compiling and running CUDA hello world example
on:
  pull_request:
    types:
      - labeled

jobs:
  
  build-and-run:

    # Environment variables per job
    env:
      # Github workflow variables
      WORKFLOW_LABEL: casper-a100

      # NCAR / System variables
      WORKFLOW_PBS_JOBSCRIPT: validate/run-validate.pbs
      WORKFLOW_USER: bneuman
      WORKFLOW_PBS_ACCOUNT: SCSG0001
      # Path to script that will load correct modules for the code
      WORKFLOW_MODULES: config/config.modules
      WORKFLOW_RUN_LOG: $SCRATCH/tmp/validation_job.log.$(date +"%d-%m-%Y")

    runs-on: basic-runner
    if: github.event.label.name == casper-a100 && github.repository == neumanbrett/cuda_ghactions_basic

    steps:
      - name: Check out the repository code
        uses: actions/checkout@v3

      - name: Run make
        run: make

      # - name: Verify compilation
      #   run: |
      #     if [ ! -f bin/hello_world ]; then
      #       echo "Compilation failed: binary not found"
      #       exit 1
      #     fi
      #     if [ ! -s make.log ]; then
      #       echo "Compilation failed: make.log is empty"
      #       exit 1
      #     fi
      #     if ! tail -n 1 make.log | grep -q "Success"; then
      #       echo "Compilation failed: make.log does not end with 'Success'"
      #       exit 1
      #     fi
      #     cat make.log > $SCRATCH/tmp/make.log.$(date +"%d-%m-%Y")
      #     rm make.log

      - name: Submit PBS job and run tests
        run: |
          qsub -Wblock=true $WORKFLOW_PBS_JOBSCRIPT

      # - name: Verify run
      #   run: |
      #     if [ ! -f validate/validate_job.log ]; then
      #       echo "Run failed: validate_job.log not found"
      #       exit 1
      #     fi
      #     if ! grep -q "CPU" validate/validate_job.log; then
      #       echo "The job did not run on the CPU"
      #       exit 1
      #     fi
      #     if ! grep -q "GPU" validate/validate_job.log; then
      #       echo "The job did not run on the GPU"
      #       exit 1
      #     fi
      #     cat validate/validate_job.log > $SCRATCH/tmp/validate_job.log.$(date +"%d-%m-%Y") 
      #     rm validate/validate_job.log 